id: photoview
title: Photoview
version: 2.3.13
release-notes: | 
  * Database Migration to PostgreSQL
  * Upgrade to EmbassyOS v0.3.1.1 and Photoview v0.2.13
license: gnu
wrapper-repo: "https://github.com/Start9Labs/embassyos-photoview-wrapper"
upstream-repo: "https://github.com/photoview/photoview/tree/master"
support-site: "https://github.com/photoview/photoview/issues"
marketing-site: "https://photoview.github.io/"
donation-url: "https://github.com/sponsors/viktorstrate"
build: ["make"]
description:
  short: An easy way to organize and share your personal photos
  long: |
    Photoview is a simple photo gallery, providing an easy way to organize, navigate, and share photos.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /media
    filebrowser: /mnt/filebrowser
    db: /var/lib/postgresql/14
    dbconfig: /etc/postgresql/14
  io-format: yaml
migrations:
  from:
    "<2.3.9":
      type: docker
      image: main
      entrypoint: migration-from-lt-2-3-9.sh
      args: []
      io-format: json
      inject: false
      mounts:
        main: /media
  to:
    "*":
      type: script
      args: ["to"]
health-checks:
  interface:
    name: Web UI
    success-message: The Web UI is ready to visit
    type: docker
    image: main
    entrypoint: health-check.sh
    args: ["web"]
    io-format: json
    inject: true
  database:
    name: Database
    success-message: The backend is reachable via graphQL
    type: docker
    image: main
    entrypoint: health-check.sh
    args: ["api"]
    io-format: json
    inject: true
config: ~
properties:
  type: script
dependencies:
  filebrowser:
    version: "^2.14.1.1"
    description: Used to get media from File Browser
    requirement:
      type: required
volumes:
  main:
    type: data
  filebrowser:
    type: pointer
    package-id: filebrowser
    volume-id: main
    path: /data
    readonly: false
  db:
    type: data
  dbconfig:
    type: data
alerts: {}
interfaces:
  main:
    name: Web Interface
    description: Main user interface for interacting with Photoview in a web browser.
    tor-config:
      port-mapping:
        80: "80"
    lan-config:
      443:
        ssl: true
        internal: 80
    ui: true
    protocols:
      - tcp
      - http
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /media
    mounts:
      BACKUP: /mnt/backup
      main: /media
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /media
    mounts:
      BACKUP: /mnt/backup
      main: /media
    io-format: yaml
actions:
  reset-admin:
    name: Reset Root User
    description: Resets your root user (the first user) to username "admin" and a random password; restores any lost admin privileges.
    warning: This will invalidate existing sessions and password managers if you have them set up.
    allowed-statuses:
      - stopped
    implementation:
      type: docker
      image: main
      system: false
      entrypoint: reset-admin.sh
      args: []
      mounts:
        main: /media
      io-format: json
